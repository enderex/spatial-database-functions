SET schema 'public';
SET search_path TO public;
SHOW search_path;

DROP FUNCTION IF EXISTS spdba.ST_AddMeasure(geography,float8,float8);
DROP FUNCTION IF EXISTS spdba.ST_AddPoint(geography,geography);
DROP FUNCTION IF EXISTS spdba.ST_AddPoint(geography,geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_CoordDim(geography);
DROP FUNCTION IF EXISTS spdba.ST_Dimension(geography);
DROP FUNCTION IF EXISTS spdba.ST_EndPoint(geography);
DROP FUNCTION IF EXISTS spdba.ST_ExteriorRing(geography);
DROP FUNCTION IF EXISTS spdba.ST_FlipCoordinates(geography);
DROP FUNCTION IF EXISTS spdba.ST_GeometryN(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_GeometryType(geography);
DROP FUNCTION IF EXISTS spdba.ST_InteriorRingN(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_IsClosed(geography);
DROP FUNCTION IF EXISTS spdba.ST_IsEmpty(geography);
DROP FUNCTION IF EXISTS spdba.ST_IsValid(geography);
DROP FUNCTION IF EXISTS spdba.ST_IsValid(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_IsValidDetail(geography);
DROP FUNCTION IF EXISTS spdba.ST_IsValidDetail(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_IsValidReason(geography);
DROP FUNCTION IF EXISTS spdba.ST_IsValidReason(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_M(geography);
DROP FUNCTION IF EXISTS spdba.ST_NPoints(geography);
DROP FUNCTION IF EXISTS spdba.ST_NumGeometries(geography);
DROP FUNCTION IF EXISTS spdba.ST_NumInteriorRings(geography);
DROP FUNCTION IF EXISTS spdba.ST_NumPoints(geography);
DROP FUNCTION IF EXISTS spdba.ST_PointN(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_Points(geography);
DROP FUNCTION IF EXISTS spdba.ST_RemovePoint(geography,integer);
DROP FUNCTION IF EXISTS spdba.ST_SetPoint(geography,integer,geography);
DROP FUNCTION IF EXISTS spdba.ST_StartPoint(geography);
DROP FUNCTION IF EXISTS spdba.ST_X(geography);
DROP FUNCTION IF EXISTS spdba.ST_Y(geography);
DROP FUNCTION IF EXISTS spdba.ST_Z(geography);
