DEFINE hostSchema='&1'

-- Generated by Oracle SQL Developer Data Modeler 4.1.1.888
--   at:        2015-11-09 12:36:21 AEDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

DROP SEQUENCE &&hostSchema..FEATURE_ERRORS_ID_SEQ;
DROP SEQUENCE &&hostSchema..FEATURE_ERROR_SUM_ID_SEQ;
DROP SEQUENCE &&hostSchema..MANAGED_COLUMNS_ID_SEQ;
DROP SEQUENCE &&hostSchema..COLUMN_ANALYSIS_SUM_ID_SEQ;
DROP SEQUENCE &&hostSchema..COLUMN_ANALYSIS_DETAIL_ID_SEQ;

DROP TABLE &&hostSchema..SDO_GEOM_ERROR CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..FEATURE_ERROR_STATUS CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..COLUMN_ANALYSIS_DETAIL CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..COLUMN_ANALYSIS_SUMMARIES CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..FEATURE_ERRORS CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..FEATURE_ERROR_SUMMARIES CASCADE CONSTRAINTS ;
DROP TABLE &&hostSchema..MANAGED_COLUMNS CASCADE CONSTRAINTS ;

DROP TYPE T_ERROR FORCE;
CREATE OR REPLACE TYPE T_ERROR
AS
  OBJECT
  (
    ERROR   VARCHAR2 (10) ,
    ELEMENT NUMBER ,
    RING    NUMBER ,
    ID      NUMBER ,
    GEOM MDSYS.SDO_GEOMETRY ) FINAL ;
/
show errors

GRANT EXECUTE ON T_ERROR TO PUBLIC;

-- Managed Column

CREATE TABLE &&hostSchema..MANAGED_COLUMNS (
    ID                         INTEGER NOT NULL ,
    OWNER                      VARCHAR2 (32 CHAR) NOT NULL ,
    TABLE_NAME                 VARCHAR2 (32 CHAR) NOT NULL ,
    COLUMN_NAME                VARCHAR2 (32 CHAR) NOT NULL ,
    UNIQUE_FEATURE_ID_NAME     VARCHAR2 (32 CHAR) NULL ,
    GEOGRAPHIC_DECIMAL_DIGITS  INTEGER DEFAULT 7 NULL ,
    MAKE_START_END_EQUAL_13348 INTEGER DEFAULT 1 NULL ,
    SET_GEOM_NULL_WHEN_ERROR   INTEGER DEFAULT 1 NOT NULL ,
    MIN_VERTICES               NUMBER NULL ,
    AVG_VERTICES               NUMBER NULL ,
    MAX_VERTICES               NUMBER NULL ,
    VERTEX_DATE                DATE NULL
);

ALTER TABLE &&hostSchema..MANAGED_COLUMNS ADD CONSTRAINT MANAGED_COLUMNS_PK PRIMARY KEY ( ID ) NOT DEFERRABLE ENABLE VALIDATE ;
ALTER TABLE &&hostSchema..MANAGED_COLUMNS ADD CONSTRAINT MANAGED_COLUMNS_MUNQ UNIQUE ( OWNER , TABLE_NAME , COLUMN_NAME ) NOT DEFERRABLE ENABLE VALIDATE ;

ALTER TABLE &&hostSchema..MANAGED_COLUMNS ADD CONSTRAINT GEOG_DEC_DIGITS_CK       CHECK ( GEOGRAPHIC_DECIMAL_DIGITS BETWEEN 1 AND 10) NOT DEFERRABLE ENABLE VALIDATE ;
ALTER TABLE &&hostSchema..MANAGED_COLUMNS ADD CONSTRAINT MAKE_SRT_END_EQ_13348_CK CHECK ( MAKE_START_END_EQUAL_13348 IN (0,1)) NOT DEFERRABLE ENABLE VALIDATE ;
ALTER TABLE &&hostSchema..MANAGED_COLUMNS ADD CONSTRAINT SET_GEOM_NULL_ERROR_CK   CHECK ( SET_GEOM_NULL_WHEN_ERROR     IN (0,1)) NOT DEFERRABLE ENABLE VALIDATE ;

COMMENT ON COLUMN &&hostSchema..MANAGED_COLUMNS.UNIQUE_FEATURE_ID_NAME IS 'Name of unique integer column in table. Null if does not exist.' ;

CREATE SEQUENCE &&hostSchema..MANAGED_COLUMNS_ID_SEQ START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE ORDER ;

CREATE OR REPLACE TRIGGER &&hostSchema..MANAGED_COLUMNS_ID_PK 
BEFORE INSERT 
ON &&hostSchema..MANAGED_COLUMNS 
FOR EACH ROW 
WHEN (NEW.ID IS NULL) 
BEGIN
  :NEW.ID := &&hostSchema..MANAGED_COLUMNS_ID_SEQ.NEXTVAL;
END;
/
show errors

-- Column Analysis Summaries

CREATE TABLE &&hostSchema..COLUMN_ANALYSIS_SUMMARIES (
    ID                     INTEGER NOT NULL ,
    ANALYSIS_PROCESS_START DATE    NOT NULL ,
    ANALYSIS_PROCESS_END   DATE        NULL ,
    TEXT                   VARCHAR2 (4000) NOT NULL
);

ALTER TABLE &&hostSchema..COLUMN_ANALYSIS_SUMMARIES ADD CONSTRAINT COLUMN_ANALYSIS_SUMMARIES_PK PRIMARY KEY ( ID ) NOT DEFERRABLE ENABLE VALIDATE ;

CREATE SEQUENCE &&hostSchema..COLUMN_ANALYSIS_SUM_ID_SEQ START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE ORDER ;

CREATE OR REPLACE TRIGGER &&hostSchema..COLUMN_ANALYSIS_SUM_ID_PK 
BEFORE INSERT 
ON &&hostSchema..COLUMN_ANALYSIS_SUMMARIES 
FOR EACH ROW 
WHEN (NEW.ID IS NULL) 
BEGIN 
  :NEW.ID := &&hostSchema..COLUMN_ANALYSIS_SUM_ID_SEQ.NEXTVAL;
END;
/
show errors

-- Column Analysis Detail

CREATE TABLE &&hostSchema..COLUMN_ANALYSIS_DETAIL (
    ID                           INTEGER NOT NULL ,
    MANAGED_COLUMN_ID            INTEGER NULL ,
    ANALYSIS_DATE                TIMESTAMP NOT NULL ,
    TEXT                         VARCHAR2 (4000 BYTE) NOT NULL ,
    COLUMN_ANALYSIS_SUMMARIES_ID INTEGER NOT NULL
);

ALTER TABLE &&hostSchema..COLUMN_ANALYSIS_DETAIL ADD CONSTRAINT COLUMN_ANALYSIS_DETAIL_PK PRIMARY KEY ( ID ) NOT DEFERRABLE ENABLE VALIDATE ;

CREATE SEQUENCE &&hostSchema..COLUMN_ANALYSIS_DETAIL_ID_SEQ START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE ORDER ;

CREATE OR REPLACE TRIGGER &&hostSchema..COLUMN_ANALYSIS_DETAIL_ID_PK 
BEFORE INSERT 
ON &&hostSchema..COLUMN_ANALYSIS_DETAIL 
FOR EACH ROW 
WHEN (NEW.ID IS NULL) 
BEGIN 
  :NEW.ID := &&hostSchema..COLUMN_ANALYSIS_DETAIL_ID_SEQ.NEXTVAL;
END;
/
show errors

-- Feature Errors

CREATE TABLE &&hostSchema..FEATURE_ERRORS (
    ID                INTEGER NOT NULL ,
    MANAGED_COLUMN_ID INTEGER NOT NULL ,
    FEATURE_ROWID UROWID (4000) NULL ,
    FEATURE_ID        INTEGER NULL ,
    ERROR_CODE_BEFORE VARCHAR2 (10) NULL,
    ERROR_CODE_AFTER  VARCHAR2 (10) NULL,
    ERROR_STATUS      CHAR (1) NOT NULL ,
    ERROR_CONTEXT     VARCHAR2 (2000) NULL ,
    ERROR_DATE        DATE NULL ,
    ORIGINAL_GEOMETRY MDSYS.SDO_GEOMETRY NULL
);

ALTER TABLE &&hostSchema..FEATURE_ERRORS ADD CONSTRAINT FEATURE_ERRORS_PK PRIMARY KEY ( ID ) NOT DEFERRABLE ENABLE VALIDATE ;

COMMENT ON COLUMN &&hostSchema..FEATURE_ERRORS.FEATURE_ID IS 'If source table has unique integer PK this will hold it if processing function supplies.' ;

CREATE SEQUENCE &&hostSchema..FEATURE_ERRORS_ID_SEQ START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE ORDER ;

CREATE OR REPLACE TRIGGER &&hostSchema..FEATURE_ERRORS_ID_PK
BEFORE INSERT 
ON &&hostSchema..FEATURE_ERRORS 
FOR EACH ROW 
WHEN (NEW.ID IS NULL) 
BEGIN 
  :NEW.ID := &&hostSchema..FEATURE_ERRORS_ID_SEQ.NEXTVAL;
END;
/
show errors

-- Feature Error Status

CREATE TABLE &&hostSchema..FEATURE_ERROR_STATUS (
    ERROR_STATUS CHAR (1 CHAR) NOT NULL ,
    ERROR_NAME   VARCHAR2 (100) NOT NULL
);

ALTER TABLE &&hostSchema..FEATURE_ERROR_STATUS ADD CONSTRAINT Feature_Error_Status_CK CHECK ( error_status IN ('P','F','E','N')) NOT DEFERRABLE ENABLE VALIDATE ;

INSERT INTO feature_error_status ( error_status, error_name) VALUES ( 'E', 'Error even after attempted fix');
INSERT INTO feature_error_status ( error_status, error_name) VALUES ( 'N', 'Original sdo_geometry column value was NULL');
INSERT INTO feature_error_status ( error_status, error_name) VALUES ( 'F', 'Error Fixed');
INSERT INTO feature_error_status ( error_status, error_name) VALUES ( 'P', 'Feature Errors record is Pending ie awaiting processing after writing by trigger');
COMMIT ;

ALTER TABLE &&hostSchema..FEATURE_ERROR_STATUS ADD CONSTRAINT FEATURE_ERROR_STATUS_PK PRIMARY KEY ( ERROR_STATUS ) NOT DEFERRABLE ENABLE VALIDATE ;

-- Feature Error Summaries

CREATE TABLE &&hostSchema..FEATURE_ERROR_SUMMARIES (
    ID                 INTEGER NOT NULL ,
    MANAGED_COLUMN_ID  INTEGER NOT NULL ,
    PREDICATE          VARCHAR2 (4000 BYTE) NULL ,
    PROCESS_START      DATE NULL ,
    PROCESS_END        DATE NULL ,
    PROCESS_COUNT      NUMBER (                    *,0) NULL ,
    ERROR_TOTAL        NUMBER (                    *,0) NULL ,
    ERROR_FIXED        NUMBER (                    *,0) NULL ,
    VALID_COUNT_BEFORE INTEGER AS ( (PROCESS_COUNT - ERROR_TOTAL) ) VIRTUAL NULL ,
    VALID_COUNT_AFTER  INTEGER AS ( ((PROCESS_COUNT-ERROR_TOTAL)+ERROR_FIXED) ) VIRTUAL NULL
);

ALTER TABLE &&hostSchema..FEATURE_ERROR_SUMMARIES ADD CONSTRAINT FEATURE_ERROR_SUMMARIES_PK PRIMARY KEY ( ID ) NOT DEFERRABLE ENABLE VALIDATE ;

CREATE SEQUENCE &&hostSchema..FEATURE_ERROR_SUM_ID_SEQ START WITH 1 INCREMENT BY 1 NOMINVALUE NOMAXVALUE NOCYCLE NOCACHE ORDER ;

CREATE OR REPLACE TRIGGER &&hostSchema..FEATURE_ERROR_SUM_ID_PK
BEFORE INSERT 
ON &&hostSchema..FEATURE_ERROR_SUMMARIES 
FOR EACH ROW 
WHEN (NEW.ID IS NULL) 
BEGIN
  :NEW.ID := &&hostSchema..FEATURE_ERROR_SUM_ID_SEQ.NEXTVAL;
END;
/
show errors

-- Sdo Geometry Error messages

CREATE TABLE &&hostSchema..SDO_GEOM_ERROR (
    CODE   VARCHAR2 (10 BYTE) NOT NULL ,
    TEXT   VARCHAR2 (255 BYTE) NULL ,
    CAUSE  VARCHAR2 (1000 BYTE) NULL ,
    ACTION VARCHAR2 (2000 BYTE) NULL
);

ALTER TABLE &&hostSchema..SDO_GEOM_ERROR ADD CONSTRAINT SDO_GEOM_ERROR_PK PRIMARY KEY ( CODE ) NOT DEFERRABLE ENABLE VALIDATE ;
ALTER TABLE &&hostSchema..COLUMN_ANALYSIS_DETAIL ADD CONSTRAINT COLUMN_ANALYSIS_FK FOREIGN KEY ( MANAGED_COLUMN_ID ) REFERENCES &&hostSchema..MANAGED_COLUMNS ( ID ) ON DELETE CASCADE ;
ALTER TABLE &&hostSchema..COLUMN_ANALYSIS_DETAIL ADD CONSTRAINT COLUMN_ANALYSIS_SUMMARIES_FK FOREIGN KEY ( COLUMN_ANALYSIS_SUMMARIES_ID ) REFERENCES &&hostSchema..COLUMN_ANALYSIS_SUMMARIES ( ID ) ;
ALTER TABLE &&hostSchema..FEATURE_ERRORS ADD CONSTRAINT FEATURE_ERRORS_CODE_AFTER_FK FOREIGN KEY ( ERROR_CODE_AFTER ) REFERENCES &&hostSchema..SDO_GEOM_ERROR ( CODE ) ;
ALTER TABLE &&hostSchema..FEATURE_ERRORS ADD CONSTRAINT FEATURE_ERRORS_CODE_BEFORE_FK FOREIGN KEY ( ERROR_CODE_BEFORE ) REFERENCES &&hostSchema..SDO_GEOM_ERROR ( CODE ) ;
ALTER TABLE &&hostSchema..FEATURE_ERRORS ADD CONSTRAINT FEATURE_ERRORS_FK FOREIGN KEY ( MANAGED_COLUMN_ID ) REFERENCES &&hostSchema..MANAGED_COLUMNS ( ID ) ON DELETE CASCADE ;
ALTER TABLE &&hostSchema..FEATURE_ERRORS ADD CONSTRAINT FEATURE_ERRORS_STATUS_FK FOREIGN KEY ( ERROR_STATUS ) REFERENCES &&hostSchema..FEATURE_ERROR_STATUS ( ERROR_STATUS ) ;
ALTER TABLE &&hostSchema..FEATURE_ERROR_SUMMARIES ADD CONSTRAINT FEATURE_ERROR_SUMMARIES_FK FOREIGN KEY ( MANAGED_COLUMN_ID ) REFERENCES &&hostSchema..MANAGED_COLUMNS ( ID ) ON DELETE CASCADE ;

GRANT INSERT,UPDATE,SELECT ON &&hostSchema..COLUMN_ANALYSIS_DETAIL TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..COLUMN_ANALYSIS_SUMMARIES TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..FEATURE_ERRORS TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..FEATURE_ERROR_STATUS TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..FEATURE_ERROR_SUMMARIES TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..MANAGED_COLUMNS TO PUBLIC;
GRANT INSERT,UPDATE,SELECT ON &&hostSchema..SDO_GEOM_ERROR TO PUBLIC;

QUIT;

